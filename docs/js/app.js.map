{"version":3,"file":"app.js","sources":["../../src/js/modules/golden-section.js","../../src/js/app.js"],"sourcesContent":["const GS = {\r\n    ORIENTATION:{\r\n        TOP: 1,\r\n        RIGHT: 2,\r\n        BOTTOM: 3,\r\n        LEFT: 4\r\n    },\r\n    ROTATION:{\r\n        CW: 1,\r\n        CCW: -1\r\n    },\r\n    RELATION:{\r\n        OVER: 1,\r\n        TO_RIGHT: 2,\r\n        UNDER: 3,\r\n        TO_LEFT: 4        \r\n    },\r\n    ALIGN:{\r\n        LEFT: -1,\r\n        CENTER: 0,\r\n        RIGHT: 1\r\n    },\r\n    VERTICAL_ALIGN:{\r\n        TOP: -1,\r\n        MIDDLE: 0,\r\n        BOTTOM: 1        \r\n    }\r\n}\r\n\r\nclass GoldenSectionUi {\r\n    constructor(params) {\r\n        this._id = params.targetNodeId;\r\n        this._host = params.host;\r\n        this._orientation = params.orientation;\r\n        this._alignment = params.alignment;\r\n        this._vertical_alignment = params.verticalAlignment;\r\n        this._rotation = params.rotation;\r\n        this._sections = [];\r\n        this._section_count = params.sectionCount;\r\n        this._section_classes = params.sectionClasses;\r\n        this._render_interval = params.renderInterval;\r\n        this._major_axis_max = params.majorAxisMax || 0;\r\n        this._major_axis_min = params.majorAxisMin || 0;\r\n        this._resize_throtle_interval = params.resizeThrotleInterval;\r\n        this._throttled = false;\r\n        this._host_dimensions = params.hostDimensions;\r\n        this._major_axis = GoldenSection.calculateMajorAxis(this.hostDimensions, \r\n            this.orientation, \r\n            this.majorAxisMax, \r\n            this.majorAxisMin);\r\n\r\n        window.addEventListener('resize', () => {this.resizeHandler()});\r\n    }\r\n\r\n    get alignment(){\r\n        return this._alignment;\r\n    }\r\n    set alignment(val){\r\n        this._alignment =  val;\r\n    }        \r\n    get host() {\r\n        return this._host;\r\n    }\r\n    get hostDimensions() {\r\n        return this._host_dimensions;\r\n    } \r\n    set hostDimensions(obj) {\r\n        this._host_dimensions = obj;\r\n    }         \r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get majorAxis(){\r\n        return this._major_axis;\r\n    }\r\n    set majorAxis(val){\r\n        this._major_axis = val;\r\n    }     \r\n    get majorAxisMax() {\r\n        return this._major_axis_max;\r\n    }\r\n    get majorAxisMin() {\r\n        return this._major_axis_min;\r\n    } \r\n    get orientation() {\r\n        return this._orientation;\r\n    } \r\n    set orientation(val) {\r\n        this._orientation = val;\r\n    }     \r\n    get renderInterval(){\r\n        return this._render_interval\r\n    }              \r\n    get resizeThrotleInterval() {\r\n        return this._resize_throtle_interval;\r\n    }       \r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n    set rotation(val) {\r\n        this._rotation = val;\r\n    }    \r\n    get sectionCount(){\r\n        return this._section_count;\r\n    }\r\n    get sections(){\r\n        return this._sections;\r\n    }\r\n    get sectionClasses(){\r\n        return this._section_classes;\r\n    }\r\n    set sectionClasses(obj){\r\n        this._section_classes = obj;\r\n    } \r\n    get throttled(){\r\n        return this._throttled;\r\n    }\r\n    set throttled(val){\r\n        this._throttled = val;\r\n    }          \r\n    get verticalAlignment(){\r\n        return this._vertical_alignment;\r\n    } \r\n    set verticalAlignment(val){\r\n        this._vertical_alignment = val;\r\n    }     \r\n    \r\n    appendSection(section, timeout){\r\n        this.sections.push(section);\r\n        if(typeof timeout === 'undefined'|| timeout === 0){\r\n            this.host.appendChild(section.element); \r\n        } else {\r\n            setTimeout(()=> {\r\n                this.host.appendChild(section.element); \r\n            }, timeout);\r\n        }\r\n    }\r\n\r\n    getSectionClass(ix) {\r\n        if (this.sectionClasses.length >= ix + 1){\r\n            return this.sectionClasses[ix];\r\n        } else if ((ix + 1) % this.sectionClasses.length === 0){\r\n            return this.sectionClasses[this.sectionClasses.length - 1];\r\n        } else {\r\n            return this.sectionClasses[((ix + 1) % this.sectionClasses.length) - 1];\r\n        }\r\n    }\r\n\r\n    resizeHandler() {\r\n        if (!this.throttled) {\r\n            this.transformUiSections();\r\n            this.throttled = true;\r\n            setTimeout(() => {\r\n                this.throttled = false;\r\n            }, this.resizeThrotleInterval);\r\n        }  \r\n    }\r\n\r\n    transformUiSections(transform_interval_constant = 0, css_transition) {\r\n\r\n        this.hostDimensions = GoldenSection.getHostDimensions(this.host);        \r\n        this.majorAxis = GoldenSection.calculateMajorAxis(this.hostDimensions, \r\n            this.orientation, \r\n            this.majorAxisMax, \r\n            this.majorAxisMin);\r\n\r\n        const base_node_division = GoldenSection.calculateMajorAxisDivisions(this.majorAxis);\r\n        this.sections[0].coordinates = GoldenSection.calculateStartCoordinates(...base_node_division, this);\r\n        this.sections[0].dimension = base_node_division[0];\r\n        this.sections[0].sectionClass = this.getSectionClass(0);\r\n        _resetCssTransition(this.sections[0], css_transition);\r\n        this.sections[0].transformSection();\r\n\r\n        let section_dimension = base_node_division[1];\r\n        let section_orientation = GoldenSection.indexOrientation(this.orientation, this.rotation, 2);\r\n\r\n        let transform_interval = transform_interval_constant;\r\n\r\n        for (let i = 1; i < this.sections.length; i++) {\r\n\r\n            const sibling_section = this.sections[i - 1];\r\n            const coordinates = GoldenSection.calculateSectionCoordinates(\r\n                                        sibling_section.dimension, \r\n                                        section_dimension, \r\n                                        ...sibling_section.coordinates, \r\n                                        section_orientation,\r\n                                        this.rotation); \r\n\r\n            this.sections[i].coordinates = coordinates\r\n            this.sections[i].dimension = section_dimension;\r\n            this.sections[i].sectionClass = this.getSectionClass(i);\r\n            _resetCssTransition(this.sections[i], css_transition);\r\n\r\n            if(transform_interval_constant){\r\n                _transformSectionOnDelay(this.sections[i], transform_interval);\r\n                transform_interval += transform_interval_constant;\r\n            } else {\r\n                this.sections[i].transformSection();                                                    \r\n            }\r\n            section_dimension = sibling_section.dimension - section_dimension;\r\n            section_orientation = GoldenSection.indexOrientation(section_orientation, this.rotation, 1);                \r\n        } \r\n        \r\n        function _transformSectionOnDelay(section, interval) {\r\n            setTimeout(()=>{\r\n                section.transformSection();\r\n            }, interval);               \r\n        }\r\n\r\n        function _resetCssTransition(section, css_transtion) {\r\n            if (typeof css_transtion !== 'undefined') {\r\n                section.cssTransition = GoldenSection.normalizeCssTransition(css_transtion); \r\n            }\r\n        }\r\n    }\r\n\r\n    transformUi(params){\r\n        if (params.hasOwnProperty('orientation')){\r\n            this.orientation = params.orientation;\r\n        }\r\n        if (params.hasOwnProperty('rotation')){\r\n            this.rotation = params.rotation;\r\n        } \r\n        if (params.hasOwnProperty('alignment')){\r\n            this.alignment = params.alignment;\r\n        } \r\n        if (params.hasOwnProperty('verticalAlignment')){\r\n            this.verticalAlignment = params.verticalAlignment;\r\n        } \r\n\r\n        if (params.hasOwnProperty('sectionClasses')){\r\n            this.sectionClasses = params.sectionClasses; \r\n        }\r\n        \r\n        const transform_interval_constant =  params.transformInterval ? params.transformInterval : 0;        \r\n        this.transformUiSections(transform_interval_constant, params.cssTransition);\r\n    }\r\n}\r\n\r\nclass Section{\r\n\r\n    constructor(params){\r\n        this._id = params.id;\r\n        this._coordinates = params.coordinates;\r\n        this._dimension = params.dimension;\r\n        this._section_class =  params.sectionClass;\r\n        this._css_transition = params.cssTransition;\r\n        this._orientation =  params.orientation;\r\n        this._element = document.createElement('div');\r\n\r\n        this.element.id = this.id\r\n        this.element.className = this.sectionClass\r\n        this.element.setAttribute('style', `position:absolute; left:${this.coordinates[0]}px; top:${this.coordinates[1]}px; height:${this.dimension}px; width:${this.dimension}px; transition: all ${this.cssTransition.duration}ms ${this.cssTransition.timing};`);\r\n    }\r\n    get coordinates() {\r\n        return this._coordinates;\r\n    }  \r\n    set coordinates(obj){\r\n        this._coordinates = obj;\r\n    } \r\n    get cssTransition(){\r\n        return this._css_transition;\r\n    }\r\n    set cssTransition(obj){\r\n        this._css_transition =  obj;\r\n    }                \r\n    get dimension() {\r\n        return this._dimension;\r\n    }\r\n    set dimension(val) {\r\n        this._dimension = val;\r\n    } \r\n    get id() {\r\n        return this._id;\r\n    }              \r\n    get element(){\r\n        return this._element;\r\n    }\r\n    set element(node){\r\n        this._element = node;\r\n    } \r\n    get orientation(){\r\n        return this._orientation;\r\n    }\r\n    set orientation(val){\r\n        this._orientation = val;\r\n    }        \r\n    get sectionClass() {\r\n        return this._section_class;\r\n    }\r\n    set sectionClass(val) {\r\n        this._section_class = val;\r\n    }\r\n\r\n    addClass(cls) {\r\n        this.element.className  = `${this.element.className} ${cls}`;\r\n    } \r\n    \r\n    appendContent(content) {\r\n\r\n        if (typeof content === 'string'){\r\n            this.element.appendChild(document.createTextNode(content));\r\n        } else if (content instanceof Element) {\r\n            this.element.appendChild(content);\r\n        } else if (typeof content === 'object' && content.hasOwnProperty('element') && content.element instanceof Element) {\r\n            this.element.appendChild(content.element);\r\n        } else {\r\n            console.log(`Unable to append this ${typeof content} as a child node`);\r\n        } \r\n    }\r\n\r\n    bindEvent(event, cb){\r\n        this.element.addEventListener(event, function(evt){\r\n            cb(evt);\r\n        })\r\n    }\r\n\r\n    classReg(cls) {\r\n        return new RegExp(\"(^|\\\\s+)\" + cls + \"(\\\\s+|$)\");\r\n    }\r\n\r\n    clearContent(){\r\n        while(this.element.firstChild){\r\n            this.element.removeChild(this.element.firstChild) \r\n        }\r\n    }\r\n\r\n    hasClass(cls) {\r\n        return this.classReg(cls).test(this.element.className);\r\n    };\r\n\r\n    removeClass(cls) {\r\n        this.element.className = this.element.className.replace(this.classReg(cls), ' ');\r\n    }\r\n\r\n    transformSection(){\r\n        const trans = ``;\r\n        this.setClass(this.sectionClass);\r\n        this.element.setAttribute('style', `position:absolute; left:${this.coordinates[0]}px; top:${this.coordinates[1]}px; height:${this.dimension}px; width:${this.dimension}px; transition: all ${this.cssTransition.duration}ms ${this.cssTransition.timing};`);\r\n    }\r\n\r\n    setClass(cls) {\r\n        this.element.className = cls;\r\n    } \r\n    \r\n    toggleClass(cls) {\r\n        let fn = this.hasClass(cls) ? this.removeClass : this.addClass;\r\n        fn(cls);\r\n    }     \r\n\r\n}\r\n\r\nclass GoldenSection{\r\n\r\n    static get phi () {\r\n        return 1.6180339887;\r\n    }\r\n \r\n    static calculateMajorAxis(host_dimensions, orientation, major_axis_max, major_axis_min) {\r\n\r\n        let major_axis = 0;\r\n        let minor_axis_max = 0;\r\n        let node_dimenson = 0;\r\n\r\n        switch (orientation) {\r\n            case GS.ORIENTATION.LEFT:\r\n            case GS.ORIENTATION.RIGHT:\r\n                major_axis = node_dimenson = host_dimensions.width;\r\n                minor_axis_max = host_dimensions.height;\r\n                break;\r\n            case GS.ORIENTATION.TOP:\r\n            case GS.ORIENTATION.BOTTOM:\r\n                major_axis = node_dimenson = host_dimensions.height;\r\n                minor_axis_max = host_dimensions.width;\r\n                break;\r\n        }\r\n\r\n        if (major_axis_max > 0 && node_dimenson > major_axis_max) {\r\n            major_axis =  major_axis_max\r\n        } else if (major_axis_min > 0 && node_dimenson < major_axis_min){\r\n            major_axis =  major_axis_min\r\n        } \r\n\r\n        if (Math.floor(major_axis / GoldenSection.phi) > minor_axis_max){\r\n            major_axis =  Math.floor(minor_axis_max * GoldenSection.phi);\r\n        }\r\n\r\n        return major_axis > major_axis_min ? major_axis : major_axis_min;       \r\n    }\r\n    \r\n    static calculateMajorAxisDivisions(major_axis){\r\n        const a = Math.round(Math.round(major_axis * 1000 / GoldenSection.phi) / 1000);\r\n        const b = major_axis - a;\r\n        return [a, b];\r\n    } \r\n\r\n    static calculateSectionCoordinates(a, b, x, y, orientation, rotation) {\r\n\r\n        let coordinate_x = 0;\r\n        let coordinate_y = 0;\r\n\r\n        switch (orientation) {\r\n            case GS.ORIENTATION.TOP:\r\n                coordinate_x = rotation === GS.ROTATION.CW ? x : x + a - b;\r\n                coordinate_y = y - b;\r\n                break;\r\n            case GS.ORIENTATION.RIGHT:\r\n                coordinate_x = x + a;\r\n                coordinate_y = rotation === GS.ROTATION.CW ? y : y + a - b;\r\n                break;\r\n            case GS.ORIENTATION.BOTTOM:\r\n                coordinate_x = rotation === GS.ROTATION.CW ? x + a - b : x;\r\n                coordinate_y = y + a;\r\n                break;\r\n            case GS.ORIENTATION.LEFT:\r\n                coordinate_x = x - b;\r\n                coordinate_y = rotation === GS.ROTATION.CW ? y + a - b : y;\r\n                break;          \r\n        }\r\n\r\n        return [coordinate_x, coordinate_y];\r\n    }    \r\n\r\n    static calculateStartCoordinates(a, b, ui_node) {\r\n\r\n        let offset_x = 0;\r\n        let offset_y = 0;\r\n        let x = 0;\r\n        let y = 0; \r\n        \r\n        const ui_dimensions = (ui_node.orientation === GS.ORIENTATION.TOP || \r\n            ui_node.orientation === GS.ORIENTATION.BOTTOM) ? {width: a, height: a + b} : {width: a + b , height: a};\r\n\r\n        switch (ui_node.alignment) {\r\n            case GS.ALIGN.CENTER:\r\n                offset_x = Math.floor((ui_node.hostDimensions.width - ui_dimensions.width) / 2);                    \r\n                break;\r\n            case GS.ALIGN.RIGHT:\r\n                offset_x = ui_node.hostDimensions.width - ui_dimensions.width;\r\n            break;\r\n        }\r\n\r\n        switch (ui_node.verticalAlignment) {\r\n            case GS.VERTICAL_ALIGN.MIDDLE:\r\n                offset_y = Math.floor((ui_node.hostDimensions.height - ui_dimensions.height) / 2);\r\n            break;\r\n            case GS.VERTICAL_ALIGN.BOTTOM:\r\n                offset_y = ui_node.hostDimensions.height - ui_dimensions.height;\r\n            break;\r\n        }        \r\n\r\n        switch (ui_node.orientation) {\r\n            case GS.ORIENTATION.TOP:\r\n            case GS.ORIENTATION.LEFT:\r\n                x = offset_x;\r\n                y = offset_y;\r\n                break;\r\n            case GS.ORIENTATION.RIGHT:\r\n                x = offset_x + b;\r\n                y = offset_y;\r\n                break;\r\n            case GS.ORIENTATION.BOTTOM:\r\n                x = offset_x\r\n                y = offset_y + b;\r\n                break;        \r\n        }\r\n\r\n        return [x, y];        \r\n    }    \r\n\r\n    static getHostDimensions(host) {\r\n        return {width: host.offsetWidth, height: host.offsetHeight};\r\n    }     \r\n\r\n    static indexOrientation(previous_orientation, rotation, increments) {\r\n        let orientation = previous_orientation;\r\n        for (let i = 0; i < increments; i++){\r\n            if (rotation === GS.ROTATION.CW){\r\n                orientation = orientation === 4 ? 1 : orientation + 1;\r\n            } else {\r\n                orientation = orientation  === 1 ? 4 : orientation - 1;\r\n            }\r\n        }\r\n        return orientation;\r\n    } \r\n    \r\n    static normalizeCssTransition(css_transition){\r\n        return typeof css_transition === 'undefined' ? {duration: 500, timing: \"ease\"} : Object.assign({duration: 500, timing: \"ease\"}, css_transition);\r\n    }\r\n    \r\n    constructor(){\r\n        this._ui_nodes = {};       \r\n    }\r\n\r\n    get uiNodes() {\r\n        return this._ui_nodes;\r\n    }\r\n\r\n    generate(params){\r\n\r\n        if(!this.validateInputParameters(params)){return false;}\r\n        params.host = document.getElementById(params.targetNodeId);\r\n        params.hostDimensions = GoldenSection.getHostDimensions(params.host);\r\n        this.initializeHost(params.host);\r\n      \r\n        const ui_node = new GoldenSectionUi(params);\r\n        if (!ui_node.host){\r\n            throw new Error('Unable to get refrence to the target element');\r\n        }\r\n\r\n        this.uiNodes[ui_node.id] = ui_node;\r\n        \r\n        const base_node_division = GoldenSection.calculateMajorAxisDivisions(ui_node.majorAxis); \r\n\r\n        const primary_section = new Section({\r\n                coordinates: GoldenSection.calculateStartCoordinates(...base_node_division, ui_node),\r\n                dimension: base_node_division[0],\r\n                id: `${ui_node.id}-node-0`,\r\n                orientation: ui_node.orientation,\r\n                sectionClass: ui_node.getSectionClass(0),\r\n                cssTransition: params.cssTransition\r\n            });\r\n \r\n        ui_node.appendSection(primary_section, 0);\r\n        let section_dimension = base_node_division[1];\r\n        let section_orientation = GoldenSection.indexOrientation(primary_section.orientation, ui_node.rotation, 2);\r\n\r\n        for (let i = 1; i < params.sectionCount; i++) {\r\n            const sibling_section = ui_node.sections[i - 1];\r\n            const coordinates = GoldenSection.calculateSectionCoordinates(\r\n                                        sibling_section.dimension, \r\n                                        section_dimension, \r\n                                        ...sibling_section.coordinates, \r\n                                        section_orientation,\r\n                                        ui_node.rotation);  \r\n                                        \r\n            ui_node.appendSection(new Section({\r\n                coordinates: coordinates,\r\n                dimension: section_dimension,\r\n                id: `${ui_node.id}-node-${i}`,\r\n                orientation: section_orientation,\r\n                sectionClass: ui_node.getSectionClass(i),\r\n                cssTransition: params.cssTransition\r\n                }), ui_node.renderInterval * i);                                                    \r\n\r\n            section_dimension = sibling_section.dimension - section_dimension;\r\n            section_orientation = GoldenSection.indexOrientation(section_orientation, ui_node.rotation, 1);\r\n        }\r\n        return ui_node;\r\n    }\r\n   \r\n    getUiNode(host_id) {\r\n        return this.uiNodes[host_id];\r\n    } \r\n\r\n    initializeHost(host) {\r\n        const style = host.getAttribute('style');\r\n        host.setAttribute('style', `${style ? style : ''} position:relative;`);\r\n    }       \r\n    \r\n    removeUiNode(host_id){\r\n        const ui_node = this.uiNodes[host_id]\r\n        while(ui_node.sections.length){\r\n            ui_node.sections[0].clearContent();\r\n            ui_node.host.removeChild(ui_node.sections[0].element);\r\n            ui_node.sections.splice(0, 1);\r\n        }\r\n        delete this.uiNodes[host_id];        \r\n    }       \r\n\r\n    validateInputParameters(params) {\r\n        let is_valid = true;\r\n        if(typeof params === 'undefined'){\r\n            is_valid = false; \r\n            console.log(`Generation Error: a arguments object is required by the generate method.`);            \r\n        }\r\n        else if (typeof params.targetNodeId === 'undefined' || params.targetNodeId === ''){\r\n            is_valid = false; \r\n            console.log(`Generation Error: a 'targetNodeId' is required by the generate method.`);\r\n        } else {\r\n\r\n            params.orientation = typeof params.orientation === 'undefined' ? GS.ORIENTATION.RIGHT : params.orientation;\r\n            params.alignment = typeof params.alignment === 'undefined' ? GS.ALIGN.LEFT : params.alignment;\r\n            params.verticalAlignment = typeof params.verticalAlignment === 'undefined' ? GS.VERTICAL_ALIGN.TOP : params.verticalAlignment;\r\n            params.rotation = typeof params.rotation === 'undefined' ? GS.ROTATION.CCW : params.rotation;\r\n            params.renderInterval = typeof params.renderInterval === 'undefined' ? 0: params.renderInterval;\r\n            params.resizeThrotleInterval = typeof params.resizeThrotleInterval === 'undefined' ? 15: params.resizeThrotleInterval;\r\n            if(typeof params.sectionCount === 'undefined' || params.sectionCount < 1){\r\n                params.sectionCount = 6;\r\n            } else {\r\n                params.sectionCount = params.sectionCount > 8 ? 8 : params.sectionCount;\r\n            }\r\n\r\n            if (params.sectionClasses === 'undefined'){\r\n                params.sectionClasses = ['wax-golden-section']  \r\n            } else if (typeof params.sectionClasses === 'string') {\r\n                params.sectionClasses = [params.sectionClasses] \r\n            } else if (!Array.isArray(params.sectionClasses)) {\r\n                is_valid = false; \r\n                console.log(`Generation Error: an invalid sectionClasses argument was passed: ${JSON.stringify(params.sectionClasses)}`);                \r\n            }\r\n\r\n            params.cssTransition = GoldenSection.normalizeCssTransition(params.cssTransition);\r\n\r\n         }\r\n        return is_valid;\r\n    }\r\n\r\n    printApi(){\r\n      \r\n        console.log(`\r\n            ********************************************************\r\n            ************ Web Atomix Golden-Section API *************\r\n\r\n            Dynamically inject the Golden-Section layout into the DOM\r\n            by calling goldenSection.generate({params}).\r\n\r\n            Parameter Options:\r\n\r\n                targetNodeId : REQUIRED, the parent node that will contain teh Golden-Section layout.\r\n                orientation: Use a GS.ORIENTATION constant to determinte the postion on the largest section in relation to the other sections with the layout.  \r\n                    It will also determine the direction of the long axis of the layout.\r\n                alignment: Use a GS.ALIGN constant to determine how the layout is aligned horizontally within the containing element.\r\n                verticalAlignment: Use a GS.VERTICAL_ALIGN constant to determine how the layout is aligned vertically within the containing element.\r\n                rotation: Use a GS.ROTATION constant to determine the rotational direction of the layout.\r\n                sectionCount: An integer value to determine the the number of sections to be rendered, the maximum is 8.\r\n                sectionClasses: An array of one or more class names to be applied to the redered sections.  A class name is applied to a section in\r\n                sequence to the sections being rendered.  If there are fewer class names in the array than layout sections, the generator will cycle \r\n                back through the array of class names, assigning them in sequence.\r\n                majorAxisMax: An optional integer value that determines the maximum major-axis dimension of the golden-section layout.            \r\n                majorAxisMin: An optional integer value that determines the minimum major-axis dimension of the golden-section layout. \r\n                cssTransition: {\r\n                    duration: An optional millisecond value that mapps to the transition-duration property -- defualt is 500.\r\n                    timing: An optional property that maps to the transition-timing-function -- default is ease-out.\r\n                }\r\n                renderInterval: An optional millisecond setting that controls the rendering of the layout sections.\r\n                resizeThrotleInterval: An optional millisecond value that throttles the resize event. By default it's set to 15ms.\r\n\r\n            ********************************************************\r\n        `);\r\n    }\r\n}\r\n\r\nconst goldenSection = new GoldenSection();\r\nexport {goldenSection, GS};\r\n","import {goldenSection, GS} from './modules/golden-section';\r\n\r\n// const goldenSection = require('golden_section').goldenSection;\r\n// const GS = require('golden_section').GS;\r\n\r\ndocument.addEventListener('DOMContentLoaded', ()=> {\r\n\r\n    const ui = goldenSection.generate({\r\n        targetNodeId: \"golden-section-wrapper\",\r\n        orientation: GS.ORIENTATION.RIGHT,\r\n        alignment: GS.ALIGN.CENTER,\r\n        verticalAlignment: GS.VERTICAL_ALIGN.MIDDLE,\r\n        rotation: GS.ROTATION.CW,\r\n        sectionCount: 7,\r\n        sectionClasses: [\"section-square\",\"section-round\"],\r\n        majorAxisMax: 1100,\r\n        majorAxisMin: 100,\r\n        cssTransition: {\r\n            duration: 500,\r\n            timing: \"linear\"\r\n        },\r\n        renderInterval: 100,\r\n        resizeThrotleInterval: 2\r\n    });\r\n    if (!ui){\r\n        throw new Error('Failed to create the UI object')\r\n    }\r\n\r\n    const rotations = [GS.ROTATION.CW, GS.ROTATION.CCW];\r\n    const orientations = [GS.ORIENTATION.TOP, GS.ORIENTATION.RIGHT, GS.ORIENTATION.BOTTOM, GS.ORIENTATION.LEFT];\r\n    const alignments = [GS.ALIGN.LEFT, GS.ALIGN.CENTER, GS.ALIGN.RIGHT];\r\n    const vertical_alignments = [GS.VERTICAL_ALIGN.TOP, GS.VERTICAL_ALIGN.MIDDLE, GS.VERTICAL_ALIGN.BOTTOM];\r\n    const class_options = ['golden-box', 'section-square', 'section-round', 'rounded-square', 'super-rounded-square', 'black-box', 'white-box'];\r\n    const transition_durations = [100,250,500,750,1000,1500,200];\r\n    const transition_timings = [\"linear\",\"ease\",\"ease-in\",\"ease-out\"];\r\n\r\n    function getRandomClasses(){\r\n        const count = 2;\r\n        const selected_classes = [];\r\n        for (let i = 0; i < count; i++) {\r\n            selected_classes.push(class_options[Math.floor(Math.random() * 7)]);\r\n        }\r\n        return selected_classes;\r\n    }\r\n\r\n    const interval = setInterval(()=>{\r\n        ui.transformUi({\r\n            orientation: orientations[Math.floor(Math.random() * 4)],\r\n            alignment: alignments[Math.floor(Math.random() * 3)],\r\n            verticalAlignment: vertical_alignments[Math.floor(Math.random() * 3)],\r\n            rotation: rotations[Math.floor(Math.random() * 2)],\r\n            sectionClasses: getRandomClasses(),\r\n            cssTransition: {\r\n                duration: transition_durations[Math.floor(Math.random() * 7)],\r\n                timing: transition_timings[Math.floor(Math.random() * 4)]\r\n            },\r\n            transformInterval: 100,\r\n        });         \r\n    }, 3000);\r\n\r\n\r\n    // setTimeout(()=>{\r\n    //     clearInterval(interval);\r\n    // }, 10000);\r\n\r\n        \r\n});"],"names":["GS","ORIENTATION","TOP","RIGHT","BOTTOM","LEFT","ROTATION","CW","CCW","RELATION","OVER","TO_RIGHT","UNDER","TO_LEFT","ALIGN","CENTER","VERTICAL_ALIGN","MIDDLE","GoldenSectionUi","params","_id","targetNodeId","_host","host","_orientation","orientation","_alignment","alignment","_vertical_alignment","verticalAlignment","_rotation","rotation","_sections","_section_count","sectionCount","_section_classes","sectionClasses","_render_interval","renderInterval","_major_axis_max","majorAxisMax","_major_axis_min","majorAxisMin","_resize_throtle_interval","resizeThrotleInterval","_throttled","_host_dimensions","hostDimensions","_major_axis","GoldenSection","calculateMajorAxis","window","addEventListener","resizeHandler","section","timeout","sections","push","appendChild","element","setTimeout","ix","length","throttled","transformUiSections","transform_interval_constant","css_transition","getHostDimensions","majorAxis","base_node_division","calculateMajorAxisDivisions","coordinates","calculateStartCoordinates","dimension","sectionClass","getSectionClass","_resetCssTransition","transformSection","section_dimension","section_orientation","indexOrientation","transform_interval","i","sibling_section","calculateSectionCoordinates","_transformSectionOnDelay","interval","css_transtion","cssTransition","normalizeCssTransition","hasOwnProperty","transformInterval","val","obj","Section","id","_coordinates","_dimension","_section_class","_css_transition","_element","document","createElement","className","setAttribute","duration","timing","cls","content","createTextNode","Element","console","log","event","cb","evt","RegExp","firstChild","removeChild","classReg","test","replace","setClass","fn","hasClass","removeClass","addClass","node","host_dimensions","major_axis_max","major_axis_min","major_axis","minor_axis_max","node_dimenson","width","height","Math","floor","phi","a","round","b","x","y","coordinate_x","coordinate_y","ui_node","offset_x","offset_y","ui_dimensions","offsetWidth","offsetHeight","previous_orientation","increments","Object","assign","_ui_nodes","validateInputParameters","getElementById","initializeHost","Error","uiNodes","primary_section","appendSection","host_id","style","getAttribute","clearContent","splice","is_valid","Array","isArray","JSON","stringify","goldenSection","ui","generate","rotations","orientations","alignments","vertical_alignments","class_options","transition_durations","transition_timings","getRandomClasses","count","selected_classes","random","setInterval","transformUi"],"mappings":"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"}